{"version":3,"file":"static/js/643.24e12814.chunk.js","mappings":"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","sources":["components/Auth/common/Error/Error.styled.js","components/Auth/common/Error/Error.jsx","components/Auth/common/Input/Input.styled.js","components/Auth/common/Input/Input.jsx","components/Auth/common/Button/Button.styled.js","components/Auth/common/Button/Button.jsx","components/Auth/common/Form/Form.styled.js","components/Auth/common/Form/Form.jsx","components/Auth/LoginForm.jsx","components/Auth/RegisterForm.jsx","components/Box/Box.js","pages/Register/Register.jsx"],"sourcesContent":["import { ErrorMessage } from 'formik';\nimport styled from 'styled-components';\n\nexport const ErrorFormik = styled(ErrorMessage)`\n  padding: 5px 0 5px 0;\n  color: #ff8900;\n  font-weight: 500;\n`;\n","import { ErrorFormik } from './Error.styled';\n\nexport const Error = ({ name }) => <ErrorFormik component=\"div\" name={name} />;\n","import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const Input = styled(Field)`\n  border-radius: 5px;\n  border: none;\n  height: 20px;\n  outline: none;\n  padding: 3px 10px;\n`;\n\nexport const LabelText = styled.span`\n  padding-bottom: 5px;\n`;\n\nexport const InputTitle = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n`;\n","import { Input, LabelText, InputTitle } from './Input.styled';\n\nexport const FormInput = ({ text, name, children, type = 'text' }) => {\n  return (\n    <InputTitle>\n      <LabelText>{text}</LabelText>\n      <Input name={name} type={type} />\n      {children}\n    </InputTitle>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  width: 105px;\n  height: 30px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 5px;\n  border: none;\n  background-color: #0396aa;\n  color: #fff;\n  border: 1px solid #fff;\n\n  cursor: pointer;\n  &:active {\n    background-color: #027583;\n    color: #fff;\n    border: 1px solid #fff;\n  }\n`;\n","import { Btn } from './Button.styled';\n\nexport const Button = ({ children, type }) => {\n  return <Btn type={type}>{children}</Btn>;\n};\n","import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const FormikForm = styled(Form)`\n  width: 320px;\n`;\n","import { FormikForm } from './Form.styled';\n\nexport const Form = ({ children }) => {\n  return <FormikForm autoComplete=\"off\">{children}</FormikForm>;\n};\n","import { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\nimport { Formik } from 'formik';\nimport { Error } from './common/Error/Error';\nimport * as yup from 'yup';\nimport { FormInput } from './common/Input/Input';\nimport { Button } from './common/Button/Button';\nimport { Form } from './common/Form/Form';\n\nexport const LoginForm = () => {\n  let schema = yup.object().shape({\n    email: yup\n      .string()\n      .email('Must be a valid email')\n      .required('\"Email\" is a required field'),\n    password: yup.string().max(16).required('\"Password\" is a required field'),\n  });\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = ({ email, password }, { resetForm }) => {\n    dispatch(authOperations.logIn({ email, password }));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <FormInput text={'Email'} name={'email'}>\n          <Error name={'email'} />\n        </FormInput>\n        <FormInput text={'Password'} name={'password'} type={'password'}>\n          <Error name={'password'} />\n        </FormInput>\n        <Button type={'submit'}>Sign in</Button>\n      </Form>\n    </Formik>\n  );\n};\n","import { authOperations } from 'redux/auth';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { FormInput } from './common/Input/Input';\nimport { Button } from './common/Button/Button';\nimport { Error } from './common/Error/Error';\nimport { Form } from './common/Form/Form';\n\nexport const RegisterForm = () => {\n  let schema = yup.object().shape({\n    name: yup.string().max(16).required('\"Name\" is a required field'),\n    email: yup\n      .string()\n      .email('Must be a valid email')\n      .required('\"Email\" is a required field'),\n    password: yup.string().max(16).required('\"Password\" is a required field'),\n  });\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = ({ name, email, password }, { resetForm }) => {\n    console.log(name, email, password);\n    dispatch(authOperations.register({ name, email, password }));\n    resetForm();\n  };\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <FormInput text={'Name'} name={'name'}>\n          <Error name={'name'} />\n        </FormInput>\n\n        <FormInput text={'Email'} name={'email'}>\n          <Error name={'email'} />\n        </FormInput>\n\n        <FormInput text={'Password'} name={'password'} type={'password'}>\n          <Error name={'password'} />\n        </FormInput>\n        <Button type=\"submit\">Register</Button>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nimport { color, layout, space, flexbox, border } from 'styled-system';\n\nexport const Box = styled('div')(color, layout, space, flexbox, border);\n","import { Box } from 'components/Box';\nimport { RegisterForm } from 'components/Auth';\n\nconst Register = () => {\n  return (\n    <Box pt={40} color=\"#fff\">\n      <Box as=\"h1\" pb={40}>\n        Registration\n      </Box>\n      <RegisterForm />\n    </Box>\n  );\n};\n\nexport default Register;\n"],"names":["ErrorFormik","styled","ErrorMessage","Error","name","component","Input","Field","LabelText","InputTitle","FormInput","text","children","type","Btn","Button","FormikForm","Form","autoComplete","LoginForm","schema","yup","shape","email","required","password","max","dispatch","useDispatch","initialValues","validationSchema","onSubmit","resetForm","authOperations","RegisterForm","console","log","Box","color","layout","space","flexbox","border","pt","as","pb"],"sourceRoot":""}