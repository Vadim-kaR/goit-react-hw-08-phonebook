{"version":3,"file":"static/js/147.6f47ebe9.chunk.js","mappings":"sLAEaA,E,QAAMC,GAAAA,OAAH,iW,SCAHC,EAAS,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KACjC,OAAO,SAACJ,EAAD,CAAKI,KAAMA,EAAX,SAAkBD,M,0FCAdE,GAASJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,yHAQNM,EAAYN,EAAAA,GAAAA,KAAH,gDAITO,EAAcP,EAAAA,GAAAA,MAAH,6F,SCbXQ,EAAa,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,KAAMR,EAA8B,EAA9BA,SAA8B,IAApBC,KAAAA,OAAoB,MAAb,OAAa,EACrE,OACE,UAACI,EAAD,YACE,SAACD,EAAD,UAAYG,KACZ,SAACL,EAAD,CAAQM,KAAMA,EAAMP,KAAMA,IACzBD,O,4ECJMS,GAAMX,EAAAA,EAAAA,IAAO,MAAPA,CAAcY,EAAAA,GAAOC,EAAAA,GAAQC,EAAAA,GAAOC,EAAAA,GAASC,EAAAA,K,6MCAnDC,GAAajB,EAAAA,EAAAA,IAAOkB,EAAAA,GAAPlB,CAAH,yCAOVmB,GAHOnB,EAAAA,GAAAA,GAAH,kDAGIA,EAAAA,EAAAA,IAAOoB,EAAAA,GAAPpB,CAAH,0F,qCCFLqB,EAAY,WACvB,IAAIC,EAASC,EAAAA,KAAaC,MAAM,CAC9BC,MAAOF,EAAAA,KAEJE,MAAM,yBACNC,SAAS,+BACZC,SAAUJ,EAAAA,KAAaK,IAAI,IAAIF,SAAS,oCAGpCG,GAAWC,EAAAA,EAAAA,MAOjB,OACE,+BACE,SAAC,KAAD,CACEC,cAAe,CACbN,MAAO,GACPE,SAAU,IAEZK,iBAAkBV,EAClBW,SAbe,SAAC,EAAD,GAAyC,IAAtCR,EAAqC,EAArCA,MAAOE,EAA8B,EAA9BA,SAAcO,EAAgB,EAAhBA,UAC3CL,EAASM,EAAAA,EAAAA,MAAqB,CAAEV,MAAAA,EAAOE,SAAAA,KACvCO,KAKE,UAQE,UAACjB,EAAD,CAAYmB,aAAa,MAAzB,WACE,SAAC,IAAD,CAAY3B,KAAM,QAASC,KAAM,QAAjC,UACE,SAACS,EAAD,CAAOkB,UAAU,MAAM3B,KAAK,aAE9B,SAAC,IAAD,CAAYD,KAAM,WAAYC,KAAM,WAAYP,KAAM,WAAtD,UACE,SAACgB,EAAD,CAAOkB,UAAU,MAAM3B,KAAK,gBAE9B,SAACT,EAAA,EAAD,CAAQE,KAAM,SAAd,6BC3BV,EAXc,WACZ,OACE,UAACQ,EAAA,EAAD,CAAK2B,GAAI,GAAI1B,MAAM,OAAnB,WACE,SAACD,EAAA,EAAD,CAAK4B,GAAG,KAAKC,GAAI,GAAjB,qBAGA,SAACnB,EAAD","sources":["components/Auth/common/Button/Button.styled.js","components/Auth/common/Button/Button.jsx","components/Auth/common/Inpute/Inpute.styled.js","components/Auth/common/Inpute/Inpute.jsx","components/Box/Box.js","components/Auth/LoginForm/LoginForm.styled.js","components/Auth/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  width: 105px;\n  height: 30px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 5px;\n  border: none;\n  background-color: #0396aa;\n  color: #fff;\n  border: 1px solid #fff;\n\n  cursor: pointer;\n  &:active {\n    background-color: #027583;\n    color: #fff;\n    border: 1px solid #fff;\n  }\n`;\n","import { Btn } from './Button.styled';\n\nexport const Button = ({ children, type }) => {\n  return <Btn type={type}>{children}</Btn>;\n};\n","import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const Inpute = styled(Field)`\n  border-radius: 5px;\n  border: none;\n  height: 20px;\n  outline: none;\n  padding: 3px 10px;\n`;\n\nexport const LabelText = styled.span`\n  padding-bottom: 5px;\n`;\n\nexport const InputeTitle = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n`;\n","import { Inpute, LabelText, InputeTitle } from './Inpute.styled';\n\nexport const FormInpute = ({ text, name, children, type = 'text' }) => {\n  return (\n    <InputeTitle>\n      <LabelText>{text}</LabelText>\n      <Inpute name={name} type={type} />\n      {children}\n    </InputeTitle>\n  );\n};\n","import styled from 'styled-components';\nimport { color, layout, space, flexbox, border } from 'styled-system';\n\nexport const Box = styled('div')(color, layout, space, flexbox, border);\n","import styled from 'styled-components';\nimport { Form, ErrorMessage } from 'formik';\n\nexport const FormikForm = styled(Form)`\n  width: 320px;\n`;\n\nexport const Text = styled.h1`\n  padding-bottom: 40px;\n`;\nexport const Error = styled(ErrorMessage)`\n  padding: 5px 0 5px 0;\n  color: #ff8900;\n  font-weight: 500;\n`;\n","import { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\nimport { Formik } from 'formik';\nimport { FormikForm, Error } from './LoginForm.styled';\nimport * as yup from 'yup';\nimport { FormInpute } from '../common/Inpute/Inpute';\nimport { Button } from '../common/Button/Button';\n\nexport const LoginForm = () => {\n  let schema = yup.object().shape({\n    email: yup\n      .string()\n      .email('Must be a valid email')\n      .required('\"Email\" is a required field'),\n    password: yup.string().max(16).required('\"Password\" is a required field'),\n  });\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = ({ email, password }, { resetForm }) => {\n    dispatch(authOperations.logIn({ email, password }));\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <FormikForm autoComplete=\"off\">\n          <FormInpute text={'Email'} name={'email'}>\n            <Error component=\"div\" name=\"email\" />\n          </FormInpute>\n          <FormInpute text={'Password'} name={'password'} type={'password'}>\n            <Error component=\"div\" name=\"password\" />\n          </FormInpute>\n          <Button type={'submit'}>Sign in</Button>\n        </FormikForm>\n      </Formik>\n    </>\n  );\n};\n","import { Box } from 'components/Box';\nimport { LoginForm } from 'components/Auth/LoginForm/LoginForm';\n\nconst Login = () => {\n  return (\n    <Box pt={40} color=\"#fff\">\n      <Box as=\"h1\" pb={40}>\n        Log In\n      </Box>\n      <LoginForm />\n    </Box>\n  );\n};\n\nexport default Login;\n"],"names":["Btn","styled","Button","children","type","Inpute","Field","LabelText","InputeTitle","FormInpute","text","name","Box","color","layout","space","flexbox","border","FormikForm","Form","Error","ErrorMessage","LoginForm","schema","yup","shape","email","required","password","max","dispatch","useDispatch","initialValues","validationSchema","onSubmit","resetForm","authOperations","autoComplete","component","pt","as","pb"],"sourceRoot":""}