{"version":3,"file":"static/js/260.d809524e.chunk.js","mappings":"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","sources":["components/Box/Box.js","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContatsList/ContactsList.styled.js","components/ContatsList/ContacstsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { color, layout, space, flexbox, border } from 'styled-system';\n\nexport const Box = styled('div')(color, layout, space, flexbox, border);\n","export const getContacts = state => state.contacts.entities;\nexport const getFilterName = state => state.contacts.filter;\n","import styled from 'styled-components';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const InputTitle = styled.span`\n  margin-right: 10px;\n  width: 45px;\n`;\n\nexport const InputField = styled.label`\n  margin-bottom: 20px;\n`;\n\nexport const AddBtn = styled.button`\n  width: 105px;\n  height: 30px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 5px;\n  border: none;\n  background-color: #0396aa;\n  color: #fff;\n  border: 1px solid #fff;\n\n  cursor: pointer;\n  &:hover {\n    background-color: #027583;\n    color: #fff;\n    border: 1px solid #fff;\n  }\n`;\n\nexport const Inpute = styled(Field)`\n  border-radius: 5px;\n  border: none;\n  height: 20px;\n  outline: none;\n  padding: 3px 10px;\n  width: 200px;\n`;\n\nexport const Error = styled(ErrorMessage)`\n  padding: 5px 0 5px 0;\n  color: #a62217;\n  font-weight: 500;\n`;\n","import { Form, Formik } from 'formik';\nimport { toast } from 'react-toastify';\nimport { Box } from 'components/Box/Box';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { contactsSelectors } from 'redux/contacts';\nimport { TiPlus } from 'react-icons/ti';\nimport {\n  InputTitle,\n  InputField,\n  AddBtn,\n  Inpute,\n  Error,\n} from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  let schema = yup.object().shape({\n    name: yup\n      .string()\n      .max(16)\n      .required()\n      .matches(\n        /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n        'name may contain only letters'\n      ),\n    number: yup\n      .string()\n      .max(12)\n      .required()\n      .matches(\n        /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n        'Phone number is not valid'\n      ),\n  });\n\n  const handleContactSubmit = ({ name, number }, { resetForm }) => {\n    const newContact = {\n      name,\n      number,\n    };\n\n    const alreadyName = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (alreadyName) {\n      toast.info(`${name} is already in contacts.`);\n      return;\n    }\n    dispatch(addContact(newContact));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={schema}\n      onSubmit={handleContactSubmit}\n    >\n      <Form autoComplete=\"off\">\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          justifyContent=\"center\"\n          p=\"l\"\n        >\n          <InputField htmlFor=\"name\">\n            <Box display=\"flex\">\n              <InputTitle>Name</InputTitle>\n              <Inpute type=\"text\" name=\"name\" />\n            </Box>\n\n            <Error component=\"div\" name=\"name\" />\n          </InputField>\n          <InputField htmlFor=\"number\">\n            <Box display=\"flex\">\n              <InputTitle>Phone</InputTitle>\n              <Inpute type=\"tel\" name=\"number\" />\n            </Box>\n\n            <Error component=\"div\" name=\"number\" />\n          </InputField>\n          <AddBtn type=\"submit\">\n            <TiPlus size={12} />\n            Add Contact\n          </AddBtn>\n        </Box>\n      </Form>\n    </Formik>\n  );\n};\n\nexport { ContactForm };\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  margin-bottom: 10px;\n  justify-content: center;\n`;\n\nexport const Text = styled.div`\n  width: 100%;\n  display: flex;\n  font-weight: 500;\n`;\n\nexport const NameText = styled.p`\n  width: 50%;\n`;\n\nexport const NumberText = styled.p`\n  width: 50%;\n`;\n\nexport const DeleteBtn = styled.button`\n  padding: 3px 5px;\n  border-radius: 5px;\n  border: none;\n  background-color: #0396aa;\n  color: white;\n  cursor: pointer;\n  &:hover {\n    background-color: #027583;\n  }\n`;\n","import { Box } from 'components/Box/Box';\nimport {\n  ContactItem,\n  Text,\n  NameText,\n  NumberText,\n  DeleteBtn,\n} from './ContactsList.styled';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelectors, contactsOperations } from 'redux/contacts';\nimport { getFilterName } from 'redux/contacts/contactsSelectors';\n\nconst ContactsList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const filter = useSelector(getFilterName);\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  const getFiltredContact = () => {\n    const lowerCasedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(lowerCasedFilter)\n    );\n  };\n\n  const deleteContact = id => {\n    dispatch(contactsOperations.removeContact(id));\n  };\n\n  return (\n    <Box pt=\"l\" pb=\"l\" width=\"100%\">\n      <ul>\n        {getFiltredContact().map(({ id, name, number }) => (\n          <ContactItem key={id}>\n            <Text>\n              <NameText>{name}:</NameText>\n              <NumberText>{number}</NumberText>\n            </Text>\n            <DeleteBtn onClick={() => deleteContact(id)}>Delete</DeleteBtn>\n          </ContactItem>\n        ))}\n      </ul>\n    </Box>\n  );\n};\n\nexport { ContactsList };\n","import styled from 'styled-components';\n\nexport const InputTitle = styled.span`\n  margin-right: 10px;\n`;\n\nexport const Inpute = styled.input`\n  width: 180px;\n  border-radius: 5px;\n  border: none;\n  height: 20px;\n  outline: none;\n  padding: 3px 10px;\n`;\n","import { InputTitle, Inpute } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterByContactName } from 'redux/contacts/contactsSlice';\nimport { getFilterName } from 'redux/contacts/contactsSelectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilterName);\n\n  const setFilterName = e => {\n    dispatch(filterByContactName(e.currentTarget.value));\n  };\n\n  return (\n    <label>\n      <InputTitle>Filter</InputTitle>\n      <Inpute type=\"text\" value={filter} onChange={setFilterName} />\n    </label>\n  );\n};\n\nexport { Filter };\n","import { ContactForm } from 'components/ContactForm';\nimport { ContactsList } from 'components/ContatsList';\nimport { Filter } from 'components/Filter';\nimport { Box } from 'components/Box';\n\nconst Contacts = () => {\n  return (\n    <Box pt=\"l\" display=\"flex\" justifyContent=\"center\">\n      <Box\n        width=\"400px\"\n        minHeight=\"400px\"\n        p=\"l\"\n        bg=\"accent\"\n        flexDirection=\"column\"\n        display=\"flex\"\n        alignItems=\"center\"\n        overflow=\"hidden\"\n        borderRadius=\"min\"\n      >\n        <h1>PhoneBook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactsList />\n      </Box>\n    </Box>\n  );\n};\n\nexport default Contacts;\n"],"names":["Box","styled","color","layout","space","flexbox","border","getContacts","state","contacts","entities","getFilterName","filter","InputTitle","InputField","AddBtn","Inpute","Field","Error","ErrorMessage","ContactForm","dispatch","useDispatch","useSelector","contactsSelectors","schema","yup","shape","name","max","required","matches","number","initialValues","validationSchema","onSubmit","resetForm","newContact","find","contact","toLowerCase","toast","addContact","autoComplete","display","flexDirection","justifyContent","p","htmlFor","type","component","size","ContactItem","Text","NameText","NumberText","DeleteBtn","ContactsList","useEffect","contactsOperations","fetchContacts","pt","pb","width","lowerCasedFilter","includes","getFiltredContact","map","id","onClick","removeContact","deleteContact","Filter","value","onChange","e","filterByContactName","currentTarget","minHeight","bg","alignItems","overflow","borderRadius"],"sourceRoot":""}